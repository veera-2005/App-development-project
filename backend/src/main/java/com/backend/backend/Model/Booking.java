// package com.backend.backend.Model;

// // import java.util.Date;

// import jakarta.persistence.*;
// import lombok.Data;

// // @Entity
// // @Data
// // public class Booking {
    
// //     @Id
// //     @GeneratedValue(strategy = GenerationType.IDENTITY)
// //     private long booking_id;
// //     private String name,email;
// //     private long phone;
// //     private Date booking_date;
// //     private String describeofenent;
// //     private String addresst;
// //     private boolean bookingstatus=false,Paymentstatus=false;

// //     @ManyToOne(cascade = CascadeType.ALL)
// //     private User user;

// //     @OneToOne(cascade = CascadeType.ALL)
// //     private Event event;

// // }
// @Data
// @Entity
// public class Booking {

//     @Id
//     @GeneratedValue(strategy = GenerationType.IDENTITY)
//     private long booking_id;

//     private String name;
//     private String email;
//     private String phone;
//     private String bookingDate;
//     private String describeEvent;
//     private String address;
//     private boolean bookingstatus;
//     private boolean Paymentstatus;

//     // @ManyToOne
//     // @JoinColumn(name = "event_id")
//     // private Event event;

//     // @ManyToOne
//     // @JoinColumn(name = "user_id")
//     // private User user;

//         @ManyToOne
//         @JoinColumn(name = "event_id")
//         private Event event;

//         @ManyToOne
//         @JoinColumn(name = "user_id")
//         private User user;


//     // Getters and Setters
// }


package com.backend.backend.Model;

import jakarta.persistence.*;
import lombok.Data;

@Data
@Entity
public class Booking {

        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY)
        private long booking_id; // Ensure this is the primary key and is auto-generated.

    private String name;
    private String email;
    private String phone; // Use String for phone to handle various formats and lengths.
    private String bookingDate; // Consider using java.time.LocalDate for date fields.
    private String describeEvent; // Ensure this matches the column name in the database.
    private String address; // Ensure this matches the column name in the database.
    private boolean bookingstatus = false; // Indicates if the booking is confirmed.
    private boolean Paymentstatus; // Indicates if payment is completed.

    @ManyToOne
    @JoinColumn(name = "event_id") // Foreign key column in the Booking table.
    private Event event; // Association with the Event entity.

    @ManyToOne
    @JoinColumn(name = "user_id") // Foreign key column in the Booking table.
    private User user; // Association with the User entity.

    // Getters and Setters are generated by Lombok @Data annotation.
}
